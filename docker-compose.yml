version: "3.8"

x-airflow-common: &airflow-common
  build: .
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow_user:airflow_pass@postgres-airflow:5432/airflow_db
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
  depends_on:
    - postgres-airflow
    - postgres-music

services:
  # База для Airflow
  postgres-airflow:
    image: postgres:15
    container_name: airflow_postgres
    environment:
      POSTGRES_USER: airflow_user
      POSTGRES_PASSWORD: airflow_pass
      POSTGRES_DB: airflow_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata_airflow:/var/lib/postgresql/data

  # База для ETL (лайки)
  postgres-music:
    image: postgres:15
    container_name: music_postgres
    environment:
      POSTGRES_USER: music_user
      POSTGRES_PASSWORD: music_pass
      POSTGRES_DB: music_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata_music:/var/lib/postgresql/data

  # Airflow Webserver
  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    command: webserver
    ports:
      - "8080:8080"

  # Airflow Scheduler
  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    command: scheduler

  # Airflow Triggerer
  airflow-triggerer:
    <<: *airflow-common
    container_name: airflow_triggerer
    command: triggerer

  # Metabase
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - ./metabase-data:/metabase-data
    depends_on:
      - postgres-music

volumes:
  pgdata_airflow:
  pgdata_music:
  metabase-data:
